{"version":3,"file":"type-tabs/index.js","mappings":"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","sources":["webpack://tailpress/./flexible-content/src/type-tabs/edit.js","webpack://tailpress/./flexible-content/src/type-tabs/save.js","webpack://tailpress/external window [\"wp\",\"blockEditor\"]","webpack://tailpress/external window [\"wp\",\"blocks\"]","webpack://tailpress/external window [\"wp\",\"components\"]","webpack://tailpress/external window [\"wp\",\"element\"]","webpack://tailpress/webpack/bootstrap","webpack://tailpress/webpack/runtime/compat get default export","webpack://tailpress/webpack/runtime/define property getters","webpack://tailpress/webpack/runtime/hasOwnProperty shorthand","webpack://tailpress/webpack/runtime/make namespace object","webpack://tailpress/./flexible-content/src/type-tabs/index.js"],"sourcesContent":["/**\n * WordPress components that create the necessary UI elements for the block\n *\n * @see https://developer.wordpress.org/block-editor/packages/packages-components/\n */\nimport { TextControl } from '@wordpress/components';\n// import { __experimentalInputControl as InputControl } from '@wordpress/components';\nimport { InnerBlocks } from '@wordpress/block-editor';\n\n/**\n * React hook that is used to mark the block wrapper element.\n * It provides all the necessary props like the className name.\n *\n * @see https://developer.wordpress.org/block-editor/packages/packages-block-editor/#useBlockProps\n */\nimport { useBlockProps } from '@wordpress/block-editor';\n\n/**\n * Import hooks from element\n * \n */\nimport { useState } from '@wordpress/element';\n\n\n/**\n * The edit function describes the structure of your block in the context of the\n * editor. This represents what the editor will render when the block is used.\n *\n * @see https://developer.wordpress.org/block-editor/developers/block-api/block-edit-save/#edit\n *\n * @param {Object}   props               Properties passed to the function.\n * @param {Object}   props.attributes    Available block attributes.\n * @param {Function} props.setAttributes Function that updates individual attributes.\n *\n * @return {WPElement} Element to render.\n */\nexport default function Edit({ attributes, setAttributes }) {\n  const blockProps = useBlockProps({\n    className: 'border border-sky-500'\n  });\n\n  const handleNewTabAdd = (newTab) => {\n    setAttributes({\n      tabs: [...tabs, newTab]\n    })\n  }\n\n  const renderNewBlockView = () => {\n    const [ newTab, setNewTab ] = useState({\n      title: '',\n      content: {}\n    });\n\n    return (\n      <div className=\"w-full tab-block\">\n        <ul className=\"p-0 flex flex-row\">\n          <li className=\"list-none px-6 py-2 rounded-t-md bg-slate-200 w-fit tab\">\n            <TextControl\n              value={newTab.value}\n              onChange={(value) => {\n                console.log(newTab)\n                setNewTab({\n                  title: value,\n                  content: newTab.content\n                })\n              }}\n              onKeyDown={(e) => {\n                if (e.key === 'Enter' && newTab.title !== '') {\n                  handleNewTabAdd(newTab);\n                }\n              }}\n              placeholder=\"New Tab\"\n              className=\"[&>input]:border-none [&>input]:bg-transparent\"\n            />\n          </li>\n          <li className=\"list-none rounded-t-md bg-slate-200 w-fit ml-1\">\n            <button\n              onClick={() => {\n                console.log(\"This is clicked\")\n              }}\n              className=\"w-full h-full px-6 py-1 bg-transparent border-none rounded-t-md\"\n            >\n              +\n            </button>\n          </li>\n        </ul>\n        <InnerBlocks className=\"w-full content\" />\n      </div>\n    );\n  }\n\n  return (\n    <div {...blockProps}>\n      {attributes.tabs ?\n        attributes.tabs.map((tab) => {\n          return (\n            <div>This is a tab</div>\n          );\n        })\n        :\n        renderNewBlockView()\n      }\n    </div>\n\n  );\n}\n","/**\n * React hook that is used to mark the block wrapper element.\n * It provides all the necessary props like the class name.\n *\n * @see https://developer.wordpress.org/block-editor/packages/packages-block-editor/#useBlockProps\n */\nimport { useBlockProps } from '@wordpress/block-editor';\n\n/**\n * The save function defines the way in which the different attributes should\n * be combined into the final markup, which is then serialized by the block\n * editor into `post_content`.\n *\n * @see https://developer.wordpress.org/block-editor/developers/block-api/block-edit-save/#save\n *\n * @param {Object} props            Properties passed to the function.\n * @param {Object} props.attributes Available block attributes.\n * @return {WPElement} Element to render.\n */\nexport default function save({ attributes }) {\n  const blockProps = useBlockProps.save();\n  return (\n    <div {...blockProps}>\n      <div className=\"w-full tab-block\">\n        <ul className=\"p-0 flex flex-row\">\n          {attributes.tabs\n            ?\n            attributes.tabs.map((tab) => {\n              return (\n                <li className=\"list-none px-6 py-2 rounded-t-md bg-slate-200 w-fit tab\">\n\n                </li>\n              )\n            })\n            : (\n              <p>No Tabs</p>\n            )}\n        </ul>\n      </div>\n    </div>\n  );\n}\n","module.exports = window[\"wp\"][\"blockEditor\"];","module.exports = window[\"wp\"][\"blocks\"];","module.exports = window[\"wp\"][\"components\"];","module.exports = window[\"wp\"][\"element\"];","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","/**\n * Registers a new block provided a unique name and an object defining its behavior.\n *\n * @see https://developer.wordpress.org/block-editor/developers/block-api/#registering-a-block\n */\n import { registerBlockType } from '@wordpress/blocks';\n \n /**\n  * Internal dependencies\n  */\n import Edit from './edit';\n import save from './save';\n import metadata from './block.json';\n \n /**\n  * Every block starts by registering a new block type definition.\n  *\n  * @see https://developer.wordpress.org/block-editor/developers/block-api/#registering-a-block\n  */\n registerBlockType( metadata.name, {\n   /**\n    * Used to construct a preview for the block to be shown in the block inserter.\n    */\n   example: {\n     attributes: {\n       message: 'Edgepress Tabs',\n     },\n   },\n   /**\n    * @see ./edit.js\n    */\n   edit: Edit,\n   /**\n    * @see ./save.js\n    */\n   save,\n } );\n "],"names":["TextControl","InnerBlocks","useBlockProps","useState","Edit","attributes","setAttributes","blockProps","className","handleNewTabAdd","newTab","tabs","renderNewBlockView","setNewTab","title","content","value","console","log","e","key","map","tab","save","registerBlockType","metadata","name","example","message","edit"],"sourceRoot":""}